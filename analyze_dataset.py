import os
import matplotlib.pyplot as plt
from collections import defaultdict
from pathlib import Path


def analyze_class_distribution(data_dir):
    """
    –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–æ–≤ –≤ –¥–∞—Ç–∞—Å–µ—Ç–µ –∏ –≤—ã–≤–æ–¥–∏—Ç –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º—É + —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.

    Args:
        data_dir (str/Path): –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –¥–∞–Ω–Ω—ã–º–∏ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ ImageFolder)
    """
    # –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    class_counts = defaultdict(int)
    class_names = sorted(os.listdir(data_dir))

    for class_name in class_names:
        class_dir = os.path.join(data_dir, class_name)
        if os.path.isdir(class_dir):
            count = len(os.listdir(class_dir))
            class_counts[class_name] = count

    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–ø–æ —É–±—ã–≤–∞–Ω–∏—é)
    sorted_counts = sorted(class_counts.items(), key=lambda x: x[1], reverse=True)
    classes, counts = zip(*sorted_counts)

    # –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
    print("\nüìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–æ–≤:")
    print(f"–í—Å–µ–≥–æ –∫–ª–∞—Å—Å–æ–≤: {len(class_counts)}")
    print(f"–í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {sum(counts)}")
    print("\n–ö–ª–∞—Å—Å (–∫–æ–ª-–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π):")
    for class_name, count in sorted_counts:
        print(f"  {class_name:30} - {count:4} ({count / sum(counts) * 100:.1f}%)")

    # –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º—ã
    plt.figure(figsize=(12, 6))
    bars = plt.bar(classes, counts, color='skyblue')

    # –î–æ–±–∞–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ —Å—Ç–æ–ª–±—Ü—ã
    for bar in bars:
        height = bar.get_height()
        plt.text(bar.get_x() + bar.get_width() / 2., height,
                 f'{height}',
                 ha='center', va='bottom', fontsize=9)

    plt.title('–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø–æ –∫–ª–∞—Å—Å–∞–º')
    plt.xlabel('–ö–ª–∞—Å—Å—ã')
    plt.ylabel('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π')
    plt.xticks(rotation=45, ha='right')
    plt.tight_layout()

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥—Ä–∞—Ñ–∏–∫
    plt.savefig('class_distribution.png', dpi=300)
    print("\n–ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ 'class_distribution.png'")
    plt.show()


if __name__ == "__main__":
    # –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è (–∑–∞–º–µ–Ω–∏—Ç–µ –ø—É—Ç—å –Ω–∞ —Å–≤–æ–π)
    train_dir = Path("C:/Users/–î–º–∏—Ç—Ä–∏–π/Desktop/ECOMMERCE_PRODUCT_IMAGES/train")
    val_dir = Path("C:/Users/–î–º–∏—Ç—Ä–∏–π/Desktop/ECOMMERCE_PRODUCT_IMAGES/val")
    check_dir = Path("C:/Users/–î–º–∏—Ç—Ä–∏–π/Desktop/ECOMMERCE_PRODUCT_IMAGES/check")

    print("=" * 50)
    print("–ê–ù–ê–õ–ò–ó –¢–†–ï–ù–ò–†–û–í–û–ß–ù–û–ì–û –ù–ê–ë–û–†–ê:")
    analyze_class_distribution(train_dir)

    print("\n" + "=" * 50)
    print("–ê–ù–ê–õ–ò–ó –í–ê–õ–ò–î–ê–¶–ò–û–ù–ù–û–ì–û –ù–ê–ë–û–†–ê:")
    analyze_class_distribution(val_dir)

    print("\n" + "=" * 50)
    print("–ê–ù–ê–õ–ò–ó –¢–ï–°–¢–û–í–û–ì–û –ù–ê–ë–û–†–ê:")
    analyze_class_distribution(check_dir)